services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=josh@platform.rawengineering.net"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entryPoints.tcp.address=:5432"
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
      - mode: host
        protocol: tcp
        published: 5432
        target: 5432
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock

  app:
    image: ghcr.io/jmorton95/raw-backend:${GIT_COMMIT_HASH:-latest}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=8080"
      - "traefik.http.routers.web.rule=Host(`platform.rawengineering.net`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
    environment:
      - DatabaseSettings__Host=db
      - DatabaseSettings__Port=5432
      - DatabaseSettings__Database=raw-backend
      - DatabaseSettings__Username=postgres
      - DatabaseSettings__Password=${DB_PASSWORD}
      - ThirdParty__ApiKey=${API_KEY}
      - ThirdParty__ValidationToken=${VALIDATION_TOKEN}
      - ThirdParty__HostedEndpoint=${HOSTED_ENDPOINT}
    deploy:
      update_config:
        order: start-first
    depends_on:
      - db

  db:
    image: postgres:17.2
    user: postgres
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.postgres.entrypoints=tcp"
      - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    secrets:
      - db-password
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  letsencrypt:

secrets:
  db-password:
    external: true
