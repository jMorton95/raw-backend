@using RawPlatform.Data
@inject DataContext db;

@if (_products == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else if (_products is { Count: 0 })
{
    <p>
        <em>No Products Available</em>
    </p>
}
else
{
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">

    @foreach (var product in _products)
    {
        <div class="bg-white shadow-md overflow-hidden rounded-lg hover:-translate-y-2 transition-all relative">
            <div class="w-full cursor-pointer h-[260px] p-0 overflow-hidden mx-auto aspect-w-16 aspect-h-8">
                <a href="@product.ItemWebUrl" target="_blank" rel="noopener">
                    <img src="@product.ProductImageUrl" alt="@product.Title" class="h-full w-full object-contain"/>
                </a>
            </div>

            <div class="p-6 bg-white">
                <div class="flex gap-4">
                    <h4 class="text-lg font-bold text-gray-800 line-through">
                        £@Math.Round(product.EbayPrice, 2)
                    </h4>
                    
                    <h4 class="text-lg font-bold text-main-100">
                        £@Math.Round(product.DiscountedPrice!.Value, 2)
                    </h4>
                </div>
                
                <h3 class="text-gray-600 text-sm mt-4">@product.Title</h3>
                
                <div class="flex flex-direction-row gap-4 mt-4">
                    <h5 class="text-sm font-semibold text-gray-800">Remaining stock: @(product.Quantity == 0 ? "10+" : $"{product.Quantity}") </h5>
                    <h5 class="text-sm font-semibold text-gray-800">Sold: @product.EstimatedAlreadySold</h5>
                </div>

                <div class="flex gap-2 mt-4">
                    <h4 class="text-lg font-bold text-gray-800">Call:</h4>
                    <a href="tel:+447961695562" class="text-lg font-bold text-main">+44 7961 695562</a>
                </div>

                <div class="flex space-x-2 mt-4">
                    @for (var i = 0; i < 5; i++)
                    {
                        <svg
                            class="w-4 fill-[#facc15]"
                            viewBox="0 0 14 13"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg">
                            <path d="M7 0L9.4687 3.60213L13.6574 4.83688L10.9944 8.29787L11.1145 12.6631L7 11.2L2.8855 12.6631L3.00556 8.29787L0.342604 4.83688L4.5313 3.60213L7 0Z"/>
                        </svg>
                    }
                </div>
            </div>
        </div>
    }
    </div>
}

@code {
    private List<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        var products = await db.Products.ToListAsync();

        _products = products
            .OrderByDescending(x => x.DiscountedPrice)
            .ToList();
    }
}
